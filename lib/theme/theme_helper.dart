import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA70001,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          shadowColor: appTheme.blue100,
          elevation: 10,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.gray600,
          fontSize: 15.fSize,
          fontFamily: 'Lexend',
          fontWeight: FontWeight.w400,
        ),
        displaySmall: TextStyle(
          color: appTheme.black900,
          fontSize: 35.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineLarge: TextStyle(
          color: appTheme.greenA70001,
          fontSize: 30.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 24.fSize,
          fontFamily: 'Lexend',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray900E5,
          fontSize: 12.fSize,
          fontFamily: 'Overpass',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.gray900E5.withOpacity(0.8),
          fontSize: 10.fSize,
          fontFamily: 'Overpass',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray700,
          fontSize: 16.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.indigo600,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF2CBB1F),
    primaryContainer: Color(0XFF202817),
    secondaryContainer: Color(0X9962A03C),

    // Error colors
    errorContainer: Color(0X33000000),
    onError: Color(0XFF9D9D9D),

    // On colors(text colors)
    onPrimary: Color(0XFF1A1B1A),
    onPrimaryContainer: Color(0XFF9CED6B),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amberA400 => Color(0XFFFFCD00);

  // Black
  Color get black900 => Color(0XFF101010);
  Color get black90001 => Color(0XFF0A0A0A);

  // Blue
  Color get blue100 => Color(0XFFCAD6FF);
  Color get blue50019 => Color(0X192E90EA);

  // BlueGray
  Color get blueGray400 => Color(0XFF8696A3);
  Color get blueGray5019 => Color(0X19F1F1F1);
  Color get blueGray900 => Color(0XFF304022);

  // BlueGrayf
  Color get blueGray9007f => Color(0X7F353933);

  // Gray
  Color get gray100 => Color(0XFFF1FFF3);
  Color get gray10001 => Color(0XFFF1F4FF);
  Color get gray10002 => Color(0XFFF5F5F5);
  Color get gray200 => Color(0XFFEBEBEB);
  Color get gray400 => Color(0XFFB5B5B5);
  Color get gray50 => Color(0XFFF1FFF9);
  Color get gray500 => Color(0XFF91A37F);
  Color get gray600 => Color(0XFF6A6F7D);
  Color get gray700 => Color(0XFF616161);
  Color get gray800 => Color(0XFF494949);
  Color get gray80001 => Color(0XFF394929);

  // Grayf
  Color get gray6003f => Color(0X3F807E7E);
  Color get gray9007f => Color(0X7F1E1E1E);

  // GrayE
  Color get gray900E5 => Color(0XE5242121);

  // Green
  Color get green200 => Color(0XFFA0F5A8);
  Color get green400 => Color(0XFF739B61);
  Color get green50 => Color(0XFFE5FFD5);
  Color get green5001 => Color(0XFFE7EDE1);
  Color get green600 => Color(0XFF2BBB1F);
  Color get greenA100 => Color(0XFFB5EBBA);
  Color get greenA10001 => Color(0XFFB2FAB9);
  Color get greenA700 => Color(0XFF1FBB5D);
  Color get greenA70001 => Color(0XFF1FBB5E);

  // Greenc
  Color get green9004c => Color(0X4C2E471E);
  Color get green9004c01 => Color(0X4C2E481E);

  // Indigo
  Color get indigo600 => Color(0XFF1F41BB);

  // LightGreen
  Color get lightGreen100 => Color(0XFFD5EBCB);
  Color get lightGreen400 => Color(0XFF9BED6A);
  Color get lightGreen50 => Color(0XFFF2F6ED);
  Color get lightGreen800 => Color(0XFF579133);
  Color get lightGreen80001 => Color(0XFF558E32);
  Color get lightGreen900 => Color(0XFF3F6B22);
  Color get lightGreenA200 => Color(0XFF9FF16D);

  // LightGreenAE
  Color get lightGreenA200E5 => Color(0XE5A1F16D);

  // White
  Color get whiteA700 => Color(0XFFFBFDFF);
  Color get whiteA70001 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
